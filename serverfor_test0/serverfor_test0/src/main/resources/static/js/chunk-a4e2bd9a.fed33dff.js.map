{"version":3,"sources":["webpack:///./src/views/User.vue","webpack:///src/views/User.vue","webpack:///./src/views/User.vue?0f50","webpack:///./src/views/User.vue?7685","webpack:///./src/views/User.vue?ced8"],"names":["render","_vm","this","_c","_self","ref","staticClass","staticRenderFns","data","map","segments","colors","mounted","fetchSegments","methods","fetch","then","response","json","initMap","drawSegments","catch","error","console","BMap","Map","$refs","mapContainer","point","Point","points","lng","lat","centerAndZoom","enableScrollWheelZoom","forEach","segment","color","segmentId","coord","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","addOverlay","setViewport","endPoint","length","endPointMarker","Marker","label","Label","toString","offset","Size","setLabel","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,IAAI,eAAeC,YAAY,qBAElHC,EAAkB,GCKP,GACfC,OACA,OACAC,IAAA,KACAC,SAAA,GACAC,OAAA,6EAGAC,UACA,KAAAC,iBAEAC,QAAA,CACAD,gBACAE,MAAA,mCACAC,KAAAC,KAAAC,QACAF,KAAAR,IACA,KAAAE,SAAAF,EAAAE,SACA,KAAAS,UACA,KAAAC,iBAEAC,MAAAC,IACAC,QAAAD,MAAA,aAAAA,MAGAH,UACA,KAAAV,IAAA,IAAAe,KAAAC,IAAA,KAAAC,MAAAC,cACA,MAAAC,EAAA,IAAAJ,KAAAK,MAAA,KAAAnB,SAAA,GAAAoB,OAAA,GAAAC,IAAA,KAAArB,SAAA,GAAAoB,OAAA,GAAAE,KACA,KAAAvB,IAAAwB,cAAAL,EAAA,IACA,KAAAnB,IAAAyB,yBAEAd,eACA,KAAAV,SAAAyB,QAAAC,IACA,MAAAC,EAAA,KAAA1B,OAAAyB,EAAAE,UAAA,GACAR,EAAAM,EAAAN,OAAArB,IAAA8B,GAAA,IAAAf,KAAAK,MAAAU,EAAAR,IAAAQ,EAAAP,MACAQ,EAAA,IAAAhB,KAAAiB,SAAAX,EAAA,CAAAY,YAAAL,EAAAM,aAAA,EAAAC,cAAA,IACA,KAAAnC,IAAAoC,WAAAL,GACA,KAAA/B,IAAAqC,YAAAhB,GAGA,MAAAiB,EAAAX,EAAAN,OAAAM,EAAAN,OAAAkB,OAAA,GACAC,EAAA,IAAAzB,KAAA0B,OAAA,IAAA1B,KAAAK,MAAAkB,EAAAhB,IAAAgB,EAAAf,MACAmB,EAAA,IAAA3B,KAAA4B,MAAAhB,EAAAE,UAAAe,WAAA,CAAAC,OAAA,IAAA9B,KAAA+B,KAAA,UACAN,EAAAO,SAAAL,GACA,KAAA1C,IAAAoC,WAAAI,QClD6U,I,wBCQzUQ,EAAY,eACd,EACAzD,EACAO,GACA,EACA,KACA,KACA,MAIa,aAAAkD,E,kECnBf","file":"js/chunk-a4e2bd9a.fed33dff.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{ref:\"mapContainer\",staticClass:\"map-container\"})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div ref=\"mapContainer\" class=\"map-container\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      segments: [], // 初始化一个空数组来存储线段数据\r\n      colors: [\"blue\", \"red\", \"black\",\"green\", \"orange\", \"purple\", \"yellow\", \"cyan\", \"magenta\"], // 为每个线段定义颜色\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchSegments(); // 调用方法从后端获取线段数据\r\n  },\r\n  methods: {\r\n    fetchSegments() {\r\n      fetch('http://106.53.27.81:8089/tracks')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            this.segments = data.segments; // 假设API响应包含线段数据\r\n            this.initMap(); // 获取线段数据后初始化地图\r\n            this.drawSegments(); // 在地图上绘制线段\r\n          })\r\n          .catch(error => {\r\n            console.error('获取线段数据时出错:', error);\r\n          });\r\n    },\r\n    initMap() {\r\n      this.map = new BMap.Map(this.$refs.mapContainer);\r\n      const point = new BMap.Point(this.segments[0].points[0].lng, this.segments[0].points[0].lat);\r\n      this.map.centerAndZoom(point, 15);\r\n      this.map.enableScrollWheelZoom();\r\n    },\r\n    drawSegments() {\r\n      this.segments.forEach(segment => {\r\n        const color = this.colors[segment.segmentId - 1];\r\n        const points = segment.points.map(coord => new BMap.Point(coord.lng, coord.lat));\r\n        const polyline = new BMap.Polyline(points, { strokeColor: color, strokeWeight: 6, strokeOpacity: 1 });\r\n        this.map.addOverlay(polyline);\r\n        this.map.setViewport(points);\r\n\r\n        // 在每个线段的末端添加带有segment ID的标记\r\n        const endPoint = segment.points[segment.points.length - 1];\r\n        const endPointMarker = new BMap.Marker(new BMap.Point(endPoint.lng, endPoint.lat));\r\n        const label = new BMap.Label(segment.segmentId.toString(), { offset: new BMap.Size(20, -10) });\r\n        endPointMarker.setLabel(label);\r\n        this.map.addOverlay(endPointMarker);\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.map-container {\r\n  width: 100%;\r\n  height: 800px;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./User.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./User.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./User.vue?vue&type=template&id=ed1ec16a\"\nimport script from \"./User.vue?vue&type=script&lang=js\"\nexport * from \"./User.vue?vue&type=script&lang=js\"\nimport style0 from \"./User.vue?vue&type=style&index=0&id=ed1ec16a&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./User.vue?vue&type=style&index=0&id=ed1ec16a&prod&lang=css\""],"sourceRoot":""}